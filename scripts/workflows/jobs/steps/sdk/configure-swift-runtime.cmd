setlocal enabledelayedexpansion

%SW_PRE_STEP% --scope="sdk" --name="Configure Swift Runtime" --flag=SW_SKIP_SDK_RUNTIME
if errorlevel 1 exit /b 0

if defined GITHUB_ACTIONS if "%RUNNER_NAME%"=="Hosted Agent" (
  %SW_LOG_JOB_INFO% --message="Limited resources environment detected"
  set SW_ADDITIONAL_OPTIONS=-D SWIFT_PARALLEL_LINK_JOBS=2
)

if "%SW_SWIFT_SDK_SPEC%"=="readdle" (
  set SW_ADDITIONAL_OPTIONS=%SW_ADDITIONAL_OPTIONS% -D LLVM_ENABLE_PDB=ON
)

FOR /F "tokens=* USEBACKQ" %%i IN (`cygpath -m "%SW_TOOLCHAIN_DIR%"`) DO (
  SET SW_TOOLCHAIN_DIR=%%i
)

cmake^
 -B %SW_RUNTIME_BUILD_DIR%^
 -C %SW_SWIFT_SOURCES_DIR%/cmake/caches/Runtime-Windows-%SW_PLATFORM%.cmake^
 -D CMAKE_BUILD_TYPE=Release^
 -D CMAKE_C_COMPILER=%SW_TOOLCHAIN_DIR%/usr/bin/clang-cl.exe^
 -D CMAKE_C_COMPILER_TARGET=%SW_PLATFORM%-unknown-windows-msvc^
 -D CMAKE_C_FLAGS="/GS- /Oy /Gw /Gy"^
 -D CMAKE_CXX_COMPILER=%SW_TOOLCHAIN_DIR%/usr/bin/clang-cl.exe^
 -D CMAKE_CXX_COMPILER_TARGET=%SW_PLATFORM%-unknown-windows-msvc^
 -D CMAKE_CXX_FLAGS="/GS- /Oy /Gw /Gy"^
 -D CMAKE_MT=mt^
 -D CMAKE_INSTALL_PREFIX=%SW_SDK_INSTALL_DIR%^
 -D CMAKE_SYSTEM_NAME=Windows^
 -D CMAKE_SYSTEM_PROCESSOR=%SW_PLATFORM%^
 -G Ninja^
 -S %SW_SWIFT_SOURCES_DIR%^
 -D CMAKE_Swift_COMPILER_TARGET=%SW_PLATFORM%-unknown-windows-msvc^
 -D LLVM_DIR=%SW_LLVM_BUILD_DIR%/lib/cmake/llvm^
 -D SWIFT_NATIVE_SWIFT_TOOLS_PATH=%SW_TOOLCHAIN_DIR%/usr/bin^
 -D SWIFT_PATH_TO_LIBDISPATCH_SOURCE=%SW_DISPATCH_SOURCES_DIR%^
 -D SWIFT_ENABLE_EXPERIMENTAL_CONCURRENCY=YES^
 -D SWIFT_ENABLE_EXPERIMENTAL_DISTRIBUTED=YES^
 -D SWIFT_ENABLE_EXPERIMENTAL_DIFFERENTIABLE_PROGRAMMING=YES^
 -D SWIFT_ENABLE_EXPERIMENTAL_STRING_PROCESSING=YES^
 -D SWIFT_PATH_TO_STRING_PROCESSING_SOURCE=%SW_SWIFT_EXPERIMENTAL_STRING_PROCESSING_SOURCES_DIR%^
 -D SWIFT_PATH_TO_SWIFT_SYNTAX_SOURCE=%SW_SWIFT_SYNTAX_SOURCES_DIR%^
 %SW_ADDITIONAL_OPTIONS%

endlocal
