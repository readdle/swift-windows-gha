name: Snapshot

on:
  workflow_dispatch:

jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      curl_revision: ${{ steps.context.outputs.curl_revision }}
      indexstore_db_revision: ${{ steps.context.outputs.indexstore_db_revision }}
      libxml2_revision: ${{ steps.context.outputs.libxml2_revision }}
      llvm_project_revision: ${{ steps.context.outputs.llvm_project_revision }}
      mimalloc_revision: ${{ steps.context.outputs.mimalloc_revision }}
      sourcekit_lsp_revision: ${{ steps.context.outputs.sourcekit_lsp_revision }}
      swift_argument_parser_revision: ${{ steps.context.outputs.swift_argument_parser_revision }}
      swift_asn1_revision: ${{ steps.context.outputs.swift_asn1_revision }}
      swift_atomics_revision: ${{ steps.context.outputs.swift_atomics_revision }}
      swift_build_revision: ${{ steps.context.outputs.swift_build_revision }}
      swift_certificates_revision: ${{ steps.context.outputs.swift_certificates_revision }}
      swift_cmark_revision: ${{ steps.context.outputs.swift_cmark_revision }}
      swift_collections_revision: ${{ steps.context.outputs.swift_collections_revision }}
      swift_corelibs_foundation_revision: ${{ steps.context.outputs.swift_corelibs_foundation_revision }}
      swift_corelibs_libdispatch_revision: ${{ steps.context.outputs.swift_corelibs_libdispatch_revision }}
      swift_corelibs_xctest_revision: ${{ steps.context.outputs.swift_corelibs_xctest_revision }}
      swift_crypto_revision: ${{ steps.context.outputs.swift_crypto_revision }}
      swift_driver_revision: ${{ steps.context.outputs.swift_driver_revision }}
      swift_experimental_string_processing_revision: ${{ steps.context.outputs.swift_experimental_string_processing_revision }}
      swift_format_revision: ${{ steps.context.outputs.swift_format_revision }}
      swift_foundation_revision: ${{ steps.context.outputs.swift_foundation_revision }}
      swift_foundation_icu_revision: ${{ steps.context.outputs.swift_foundation_icu_revision }}
      swift_installer_scripts_revision: ${{ steps.context.outputs.swift_installer_scripts_revision }}
      swift_llbuild_revision: ${{ steps.context.outputs.swift_llbuild_revision }}
      swift_lmdb_revision: ${{ steps.context.outputs.swift_lmdb_revision }}
      swift_markdown_revision: ${{ steps.context.outputs.swift_markdown_revision }}
      swift_package_manager_revision: ${{ steps.context.outputs.swift_package_manager_revision }}
      swift_revision: ${{ steps.context.outputs.swift_revision }}
      swift_syntax_revision: ${{ steps.context.outputs.swift_syntax_revision }}
      swift_system_revision: ${{ steps.context.outputs.swift_system_revision }}
      swift_testing_revision: ${{ steps.context.outputs.swift_testing_revision }}
      swift_toolchain_sqlite_revision: ${{ steps.context.outputs.swift_toolchain_sqlite_revision }}
      swift_tools_support_core_revision: ${{ steps.context.outputs.swift_tools_support_core_revision }}
      zlib_revision: ${{ steps.context.outputs.zlib_revision }}
    steps:
      - id: context
        name: Generate Build Context
        run: |
          
          sudo DEBIAN_FRONTEND=noninteractive apt-get -qq update -yq
          sudo DEBIAN_FRONTEND=noninteractive apt-get -qq -o Dpkg::Use-Pty=0 install -yq repo libxml2-utils

          branch_version_string=${{ inputs.swift_version || '0.0.0' }}
          if [[ $branch_version_string == *.* ]]; then
            branch_name=$(echo ${branch_version_string} | awk -F. '{ ver=$1"."$2; print (ver == "0.0") ? "main" : "release/"ver }')
          else
            branch_name="release/$branch_version_string"
          fi

          repo init --quiet --groups default --depth 1 -u https://github.com/compnerd/swift-build -b $branch_name
          repo sync --quiet --no-clone-bundle --no-tags --jobs $(nproc --all)

          if [[ "${{ inputs.swift_tag }}" != "" ]] ; then
            tee -a "${GITHUB_OUTPUT}" <<-EOF
          indexstore_db_revision=refs/tags/${{ inputs.swift_tag }}
          llvm_project_revision=refs/tags/${{ inputs.swift_tag }}
          mimalloc_revision=refs/tags/v3.0.1
          sourcekit_lsp_revision=refs/tags/${{ inputs.swift_tag }}
          swift_revision=refs/tags/${{ inputs.swift_tag }}
          swift_argument_parser_revision=refs/tags/1.4.0
          swift_asn1_revision=refs/tags/1.0.0
          swift_atomics_revision=refs/tags/1.2.0
          swift_build_revision=refs/heads/main
          swift_certificates_revision=refs/tags/1.0.1
          swift_cmark_revision=refs/tags/${{ inputs.swift_tag }}
          swift_collections_revision=refs/tags/1.1.3
          swift_corelibs_foundation_revision=refs/tags/${{ inputs.swift_tag }}
          swift_corelibs_libdispatch_revision=refs/tags/${{ inputs.swift_tag }}
          swift_corelibs_xctest_revision=refs/tags/${{ inputs.swift_tag }}
          swift_crypto_revision=refs/tags/3.0.0
          swift_driver_revision=refs/tags/${{ inputs.swift_tag }}
          swift_experimental_string_processing_revision=refs/tags/${{ inputs.swift_tag }}
          swift_format_revision=refs/heads/main
          swift_foundation_revison=refs/heads/main
          swift_foundation_icu_revision=refs/heads/main
          swift_installer_scripts_revision=refs/heads/main
          swift_llbuild_revision=refs/tags/${{ inputs.swift_tag }}
          swift_lmdb_revision=refs/heads/main
          swift_markdown_revision=refs/tags/${{ inputs.swift_tag }}
          swift_package_manager_revision=refs/tags/${{ inputs.swift_tag }}
          swift_syntax_revision=refs/tags/${{ inputs.swift_tag }}
          swift_system_revision=refs/tags/1.3.0
          swift_testing_revision=refs/heads/main
          swift_toolchain_sqlite_revision=refs/tags/1.0.1
          swift_tools_support_core_revision=refs/tags/${{ inputs.swift_tag }}
          curl_revision=refs/tags/curl-8_9_1
          libxml2_revision=refs/tags/v2.11.5
          zlib_revision=refs/tags/v1.3.1
          EOF
          else
            repo manifest -r --suppress-upstream-revision --suppress-dest-branch | \
                  xmllint --xpath "//project/@name | //project/@revision" - | \
                  xargs -n2 | \
                  awk -F'[= ]' '{
                    split($2, repo, "/");
                    gsub(/-/, "_", repo[2]);
                    print tolower(repo[2]) "_revision=" $4
                  }' | tee -a "${GITHUB_OUTPUT}"
          fi

  build:
    runs-on: windows-latest
    needs: [context]

    steps:
      - uses: actions/checkout@v4
        with:
          repository: curl/curl
          ref: ${{ inputs.curl_revision }}
          path: ${{ github.workspace }}/SourceCache/curl
          show-progress: false
      - uses: actions/checkout@v4
        with:
          repository: swiftlang/indexstore-db
          ref: ${{ inputs.indexstore_db_revision }}
          path: ${{ github.workspace }}/SourceCache/indexstore-db
          show-progress: false
      - uses: actions/checkout@v4
        with:
          repository: gnome/libxml2
          ref: ${{ inputs.libxml2_revision }}
          path: ${{ github.workspace }}/SourceCache/libxml2
          show-progress: false
      - uses: actions/checkout@v4
        with:
          repository: swiftlang/llvm-project
          ref: ${{ inputs.llvm_project_revision }}
          path: ${{ github.workspace }}/SourceCache/llvm-project
          show-progress: false
      - uses: actions/checkout@v4
        with:
          repository: microsoft/mimalloc
          ref: ${{ inputs.mimalloc_revision }}
          path: ${{ github.workspace }}/SourceCache/mimalloc
      - uses: actions/checkout@v4
        with:
          repository: swiftlang/sourcekit-lsp
          ref: ${{ inputs.sourcekit_lsp_revision }}
          path: ${{ github.workspace }}/SourceCache/sourcekit-lsp
          show-progress: false
      - uses: actions/checkout@v4
        with:
          repository: apple/swift-argument-parser
          ref: ${{ inputs.swift_argument_parser_revision }}
          path: ${{ github.workspace }}/SourceCache/swift-argument-parser
          show-progress: false
